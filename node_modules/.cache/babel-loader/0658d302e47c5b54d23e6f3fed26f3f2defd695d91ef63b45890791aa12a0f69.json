{"ast":null,"code":"var _jsxFileName = \"/Users/yasinpeker/Desktop/memoryApp/memory-app 2/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport MemoryCard from './components/MemoryCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardList = [{\n  \"path\": \"/img/1.jpeg\",\n  matched: false\n}, {\n  \"path\": \"/img/2.jpeg\",\n  matched: false\n}, {\n  \"path\": \"/img/3.jpeg\",\n  matched: false\n}, {\n  \"path\": \"/img/4.jpeg\",\n  matched: false\n}, {\n  \"path\": \"/img/5.jpeg\",\n  matched: false\n}, {\n  \"path\": \"/img/6.jpeg\",\n  matched: false\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [selectedOne, setSelectedOne] = useState(null);\n  const [selectedTwo, setSelectedTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n  const prepareCards = () => {\n    const sortedCards = [...cardList, ...cardList].sort(() => 0.5 - Math.random()).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(sortedCards);\n    setSelectedOne(null);\n    setSelectedTwo(null);\n  };\n  useEffect(() => {\n    prepareCards();\n  }, []);\n  useEffect(() => {\n    if (selectedOne && selectedTwo) {\n      setDisabled(true);\n      if (selectedOne.path === selectedTwo.path) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.path === selectedOne.path) {\n              return {\n                ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetState();\n      } else {\n        setTimeout(() => {\n          resetState();\n        }, 2000);\n      }\n    }\n  }, [selectedOne, selectedTwo]);\n  const resetState = () => {\n    setSelectedOne(null);\n    setSelectedTwo(null);\n    setDisabled(false);\n  };\n  const handleSelected = card => {\n    selectedOne ? setSelectedTwo(card) : setSelectedOne(card);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Strain your memory!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-game\",\n      onClick: prepareCards,\n      children: \"Play the Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(MemoryCard, {\n        card: card,\n        handleSelected: handleSelected,\n        disabled: disabled,\n        rotated: card == selectedOne || card == selectedTwo\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 14\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Y81cgZe6jirZMLQbusqW6LgMA74=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","MemoryCard","jsxDEV","_jsxDEV","cardList","matched","App","_s","cards","setCards","selectedOne","setSelectedOne","selectedTwo","setSelectedTwo","disabled","setDisabled","prepareCards","sortedCards","sort","Math","random","map","card","id","path","prevCards","resetState","setTimeout","handleSelected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","rotated","_c","$RefreshReg$"],"sources":["/Users/yasinpeker/Desktop/memoryApp/memory-app 2/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport MemoryCard from './components/MemoryCard';\n\nconst cardList = [\n  { \"path\": \"/img/1.jpeg\", matched:false },\n  { \"path\": \"/img/2.jpeg\" ,matched:false},\n  { \"path\": \"/img/3.jpeg\" ,matched:false},\n  { \"path\": \"/img/4.jpeg\" ,matched:false},\n  { \"path\": \"/img/5.jpeg\" ,matched:false},\n  { \"path\": \"/img/6.jpeg\" ,matched:false}\n];\n\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [selectedOne,setSelectedOne]=useState(null);\n  const [selectedTwo,setSelectedTwo]=useState(null);\n  const [disabled,setDisabled]=useState(false);\n  \n\n\n  const prepareCards = () => {\n\n   \n    const sortedCards = [...cardList, ...cardList]\n    .sort(()=> 0.5 - Math.random())\n    .map((card)=> ({...card ,id:Math.random()}))\n\n    setCards(sortedCards);\n    setSelectedOne(null);\n    setSelectedTwo(null);\n  }\n\n  useEffect(() => {\n    prepareCards();\n  }, []);\n\n  useEffect(() => {\n    if(selectedOne && selectedTwo) {\n      setDisabled(true);\n      if(selectedOne.path === selectedTwo.path) {\n        setCards(prevCards => {\n           return prevCards.map(card => {\n           \n             if(card.path === selectedOne.path) {\n               return  {...card , matched:true}\n             }\n             else {\n              return card;\n             }\n           })\n          \n        })\n        \n          resetState();\n        \n       \n      }\n      else {\n     setTimeout(() => {\n        resetState();\n      }, 2000); \n      }\n    }\n  }, [selectedOne,selectedTwo]);\n\n  const resetState = () => {\n    setSelectedOne(null);\n    setSelectedTwo(null);\n    setDisabled(false);\n\n  }\n\n  const handleSelected = (card) =>  {\n    selectedOne ? setSelectedTwo(card) : setSelectedOne(card);\n\n  }\n\n\n  return (\n    <div className=\"container\">\n      <h1>Strain your memory!</h1>\n      <button className='btn btn-game'  onClick={prepareCards}>Play the Game</button>\n\n      <div className=\"card-grid\">\n        {\n          cards.map(card => (\n             <MemoryCard card={card}\n              key={card.id}\n               handleSelected={handleSelected}\n               disabled={disabled}\n               rotated={card==selectedOne || card==selectedTwo }\n               />\n        ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}