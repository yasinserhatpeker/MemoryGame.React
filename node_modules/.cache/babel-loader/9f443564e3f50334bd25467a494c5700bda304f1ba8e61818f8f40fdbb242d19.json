{"ast":null,"code":"var _jsxFileName = \"/Users/yasinpeker/Desktop/memoryApp/memory-app 2/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport MemoryCard from './components/MemoryCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardList = [{\n  \"path\": \"/img/1.jpeg\"\n}, {\n  \"path\": \"/img/2.jpeg\"\n}, {\n  \"path\": \"/img/3.jpeg\"\n}, {\n  \"path\": \"/img/4.jpeg\"\n}, {\n  \"path\": \"/img/5.jpeg\"\n}, {\n  \"path\": \"/img/6.jpeg\"\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [selectedOne, setSelectedOne] = useState(null);\n  const [selectedTwo, setSelectedTwo] = useState(null);\n  const prepareCards = () => {\n    const sortedCards = [...cardList, ...cardList].sort(() => 0.5 - Math.random()).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(sortedCards);\n    setSelectedOne(null);\n    setSelectedTwo(null);\n  };\n  useEffect(() => {\n    prepareCards();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-game\",\n      onClick: prepareCards,\n      children: \"Play the Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(MemoryCard, {\n        card: card\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ye6ng2KvLQPCLYlXh0D8xRyjicY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","MemoryCard","jsxDEV","_jsxDEV","cardList","App","_s","cards","setCards","selectedOne","setSelectedOne","selectedTwo","setSelectedTwo","prepareCards","sortedCards","sort","Math","random","map","card","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/yasinpeker/Desktop/memoryApp/memory-app 2/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport MemoryCard from './components/MemoryCard';\n\nconst cardList = [\n  { \"path\": \"/img/1.jpeg\" },\n  { \"path\": \"/img/2.jpeg\" },\n  { \"path\": \"/img/3.jpeg\" },\n  { \"path\": \"/img/4.jpeg\" },\n  { \"path\": \"/img/5.jpeg\" },\n  { \"path\": \"/img/6.jpeg\" }\n];\n\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [selectedOne,setSelectedOne]=useState(null);\n  const [selectedTwo,setSelectedTwo]=useState(null);\n  \n\n\n  const prepareCards = () => {\n\n   \n    const sortedCards = [...cardList, ...cardList]\n    .sort(()=> 0.5 - Math.random())\n    .map((card)=> ({...card ,id:Math.random()}))\n\n    setCards(sortedCards);\n    setSelectedOne(null);\n    setSelectedTwo(null);\n  }\n\n  useEffect(() => {\n    prepareCards();\n  }, []);\n\n\n  return (\n    <div className=\"container\">\n      <h1>Memory App</h1>\n      <button className='btn btn-game'  onClick={prepareCards}>Play the Game</button>\n\n      <div className=\"card-grid\">\n        {\n          cards.map(card => (\n             <MemoryCard card={card} key={card.id} />\n        ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,QAAQ,GAAG,CACf;EAAE,MAAM,EAAE;AAAc,CAAC,EACzB;EAAE,MAAM,EAAE;AAAc,CAAC,EACzB;EAAE,MAAM,EAAE;AAAc,CAAC,EACzB;EAAE,MAAM,EAAE;AAAc,CAAC,EACzB;EAAE,MAAM,EAAE;AAAc,CAAC,EACzB;EAAE,MAAM,EAAE;AAAc,CAAC,CAC1B;AAGD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,WAAW,EAACC,cAAc,CAAC,GAACV,QAAQ,CAAC,IAAI,CAAC;EACjD,MAAM,CAACW,WAAW,EAACC,cAAc,CAAC,GAACZ,QAAQ,CAAC,IAAI,CAAC;EAIjD,MAAMa,YAAY,GAAGA,CAAA,KAAM;IAGzB,MAAMC,WAAW,GAAG,CAAC,GAAGV,QAAQ,EAAE,GAAGA,QAAQ,CAAC,CAC7CW,IAAI,CAAC,MAAK,GAAG,GAAGC,IAAI,CAACC,MAAM,EAAE,CAAC,CAC9BC,GAAG,CAAEC,IAAI,KAAK;MAAC,GAAGA,IAAI;MAAEC,EAAE,EAACJ,IAAI,CAACC,MAAM;IAAE,CAAC,CAAC,CAAC;IAE5CT,QAAQ,CAACM,WAAW,CAAC;IACrBJ,cAAc,CAAC,IAAI,CAAC;IACpBE,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdc,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEV,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnB,OAAA;MAAAmB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACnBvB,OAAA;MAAQkB,SAAS,EAAC,cAAc;MAAEM,OAAO,EAAEd,YAAa;MAAAS,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAE/EvB,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAAAC,QAAA,EAEtBf,KAAK,CAACW,GAAG,CAACC,IAAI,iBACXhB,OAAA,CAACF,UAAU;QAACkB,IAAI,EAAEA;MAAK,GAAMA,IAAI,CAACC,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACpB,EAAA,CAtCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}